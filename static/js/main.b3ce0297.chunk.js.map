{"version":3,"sources":["parts/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["script","document","createElement","async","src","body","appendChild","myScript","googleScript","head","createGoogleScript","Navbar","NavbarCSS","className","href","styled","div","Titulo","TituloCSS","Descripcion","alt","Destrezas","Proyectos","rel","Pie","Container","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3ce0297.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nimport \"./../css/old.css\"\r\n\r\n// eslint-disable-next-line\r\nfunction myScript() {\r\n    const script = document.createElement(\"script\")\r\n    script.async = true\r\n    script.src = \"/scripts/myscript.js\"\r\n    document.body.appendChild(script)\r\n}\r\nmyScript()\r\n// eslint-disable-next-line\r\nfunction createGoogleScript() {\r\n    const googleScript = document.createElement(\"script\")\r\n    googleScript.async = true\r\n    googleScript.src = \"/scripts/googleScript.js\"\r\n    document.head.appendChild(googleScript)\r\n}\r\ncreateGoogleScript()\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <NavbarCSS className='navbar'>\r\n            <a href='#quien-soy'>Quién soy</a>\r\n            <a href='#destrezas'>Destrezas</a>\r\n            <a href='#projects-redirect'>Proyectos</a>\r\n            <a href='#profile-link'>Contacto</a>\r\n         </NavbarCSS>\r\n    )\r\n}\r\nconst NavbarCSS = styled.div`\r\n    display: block;\r\n    > * {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`\r\nconst Titulo = () => {\r\n    return (\r\n        <TituloCSS className=\"titulo\">\r\n            <p>Hello this is React</p>\r\n            <h1 className=\"this-is-title\" >SANTI BELLO</h1>\r\n            <div className=\"subtitulo\">\r\n                <div>\r\n                    <h2 className='hover-1'>Desarrollador Frontend</h2>\r\n                    <h2 className='hover-2'>* JavaScript</h2>\r\n                    <h2 className='hover-2'>{\"{Trabajando en React}\"}</h2>\r\n                </div>\r\n                <Navbar />\r\n            </div>\r\n            \r\n        </TituloCSS>\r\n    )\r\n}\r\nconst TituloCSS = styled.div`\r\n    place-self: center;\r\n    display: grid;\r\n    grid-template-rows: 0.5fr 0.5fr 1fr;\r\n    p { \r\n        place-self: start end;\r\n        margin: 10px;\r\n        float: right;\r\n    }\r\n    .this-is-title {\r\n        font-size: 8rem;\r\n        \r\n    }\r\n    .subtitulo {\r\n       display: flex;\r\n       flex-direction: row;\r\n       justify-content: space-between;\r\n\r\n    }\r\n    .navbar {\r\n        float: right;\r\n        place-self:  start end;\r\n        \r\n    }\r\n`\r\n\r\n\r\nconst Descripcion = () => {\r\n    return(\r\n        <div className='quien-soy'>\r\n            <p>Soy un estudiante <span className='hover-2'>autodidacta</span> en Galicia. Programo a diario.</p>\r\n            <p>Hace más de un año empecé a trastear con Java después de verle las 'tripas' a un videojuego, lo que me llevaría a descubrir la programación Web.\r\n            Me llamó la atención el <span className='hover-2'>valor</span> que podemos aportar mediante un código y un objetivo conjunto.</p>\r\n            <img className=\"heart\" src=\"img/heart_red.png\" alt=\"corazón rojo\" />\r\n            <p>Actualmente busco un trabajo que permita seguir formándome y abrirme a nuevas posibilidades estoy empleado en JavaScript y React :)\r\n            Me considero <span className='hover-2'>responsable</span>, organizado, trabajo en equipo y social, habiendo participado en la planificación y ejecución de más de <span className='hover-2'>140 eventos</span> de ocio a nivel regional desde 2014 en dos organizaciones diferentes.\r\n            Contáctame vía gmail para cualquier duda, puesta a prueba o saludarme!</p>           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Destrezas = () => {\r\n    return (\r\n        <div className=\"skills\">\r\n            <div className=\"skills-names\">\r\n                <p>JavaScript (React)</p>\r\n                <p>PHP (CodeIgniter)</p>\r\n                <p>HTML/CSS</p>\r\n                <p>Bootstrap</p>\r\n                <p>Java</p>\r\n            </div>\r\n            <div className=\"skills-hearts\">\r\n                <div>\r\n                    <img src=\"img/heart_green.png\" alt=\"corazón verde\" />\r\n                    <img src=\"img/heart_green.png\" alt=\"corazón verde\" />\r\n                    <img src=\"img/heart_green.png\" alt=\"corazón verde\" />\r\n                    <img src=\"img/heart_green.png\" alt=\"corazón verde\" />\r\n                </div>\r\n                <div>\r\n                    <img src=\"img/heart_yellow.png\" alt=\"corazón amarillo\" />\r\n                    <img src=\"img/heart_yellow.png\" alt=\"corazón amarillo\" />\r\n                    <img src=\"img/heart_yellow.png\" alt=\"corazón amarillo\" />\r\n                </div>\r\n                <div>\r\n                    <img src=\"img/heart_red.png\" alt=\"corazón rojo\" />\r\n                    <img src=\"img/heart_red.png\" alt=\"corazón rojo\" />\r\n                    <img src=\"img/heart_red.png\" alt=\"corazón rojo\" />\r\n                </div>\r\n                <div>\r\n                    <img src=\"img/heart_violet.png\" alt=\"corazón violeta\"/>\r\n                    <img src=\"img/heart_violet.png\" alt=\"corazón violeta\"/>\r\n                    <img src=\"img/heart_violet.png\" alt=\"corazón violeta\"/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"img/heart_blue.png\" alt=\"corazón azul\" />\r\n                    <img src=\"img/heart_blue.png\" alt=\"corazón azul\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Proyectos = () => {\r\n    return (\r\n        <div>\r\n            <h2 className='projects-redirect'>Proyectos.</h2>\r\n            <section className='projects'>\r\n                <a className='p-1' href='https://debello.github.io/todolist/' rel=\"noopener noreferrer\">To do List </a>\r\n                <a className='p-2' href='https://debello.github.io/kanban_bello/' rel=\"noopener noreferrer\">Kanban </a>\r\n                <a className='p-3' href='https://github.com/debello/API-Clima' rel=\"noopener noreferrer\">API Clima</a>\r\n                <a className='p-4 hover-3' href='https://github.com/debello?tab=repositories' rel=\"noopener noreferrer\">Más proyectos</a>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pie = () => {\r\n    return (\r\n        <div className='pie-pagina'>\r\n            <h2 className='profile-link'>Connect</h2>\r\n            <div className='social-buttons'>\r\n                <a href=\"https://twitter.com/debellodev\" rel=\"noopener noreferrer\"><img src=\"img/twitter-logo.png\"alt=\"twitter handle\" /></a>\r\n                <a href=\"https://github.com/debello/\" rel=\"noopener noreferrer\"><img src=\"img/github-logo.png\" alt=\"twitter handle\" /></a>\r\n            </div>\r\n            <h2>Contact</h2>\r\n            <h3>svazquez789@hotmail.com</h3>\r\n            <div>\r\n                <img className=\"fin heart hgreen\" src=\"img/heart_green.png\" alt=\"corazones pequeños\" />\r\n                <img className=\"fin heart hyellow\" src=\"img/heart_yellow.png\" alt=\"corazones pequeños\" />\r\n                <img className=\"fin heart hred\" src=\"img/heart_red.png\" alt=\"corazones pequeños\" />\r\n                <img className=\"fin heart hviolet\" src=\"img/heart_violet.png\" alt=\"corazones pequeños\" />\r\n                <img className=\"fin heart hblue\" src=\"img/heart_blue.png\" alt=\"corazones pequeños\" />\r\n            </div>\r\n            <p className='credits'>Font and theme inspired by Undertale - Toby Fox.</p>\r\n            <p className='credits'>© Santi Bello - 2/2/2019</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Navbar, Titulo, Descripcion, Destrezas, Proyectos, Pie };","import React from 'react';\nimport styled from 'styled-components'\nimport { Titulo, Descripcion, Destrezas, Proyectos, Pie } from \"./parts/Portfolio\";\nimport './css/old.css'\n\nconst App = () => {\n  return (\n    <Container className=\"container\">\n      \n      <Titulo />\n      <Descripcion />\n      <Destrezas />\n      <Proyectos />\n      <Pie />\n    </ Container>\n  );\n}\n\nconst Container = styled.div`   \n  font-size: 1.4rem;\n  img {\n    width: 40px;\n  }\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;\n    grid-row-gap: 400px;\n  \n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}